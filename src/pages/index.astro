---
import "@fontsource/inter/variable.css";
import Landing1 from 'src/components/Landing1.astro'
import Landing2 from 'src/components/Landing2.astro'
import Landing3 from 'src/components/Landing3.astro'
import Landing4 from 'src/components/Landing4.astro'
import Landing5 from "~/components/Landing5.astro";
import LandingVue1 from 'src/components/LandingVue1.vue'
import FirstComp from "~/components/FirstComp.astro";
import data from "~/data/showcase/data.json"
import Features from "~/components/features.astro";
import Footer from "~/components/footer.astro";
import Header from "~/components/header.astro";
import Intro from "~/components/NEWintro.astro";
import New1 from "~/components/NEWcomponent1.astro";
import New2 from "~/components/NEWcontactForm.astro";
import NewSimple from "~/components/NEWsimple.astro";
import NEWcontent from "~/components/NEWcontent.astro";
import Showcase from "~/components/showcase.astro";
import Splash from "~/components/splash.astro";
import "~/styles/index.css";


const { generator, site } = Astro;
const image = new URL("social.jpg", site);
const description =
  "Do not know what this is. Probably visible in source code.";

const Headline = "Headline from index.astro JS section"
---

<!DOCTYPE html>
<html lang="en" class="h-full motion-safe:scroll-smooth" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <meta name="generator" content={generator} />

    <title>Component Test</title>
    <meta name="description" content={description} />

    <!-- social media -->
    <meta property="og:title" content="Astro" />
    <meta property="og:type" content="website" />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:url" content={site} />
    <meta name="twitter:card" content="summary_large_image" />

    <!-- initialize theme -->
    <script is:inline>
      const themeSaved = localStorage.getItem("theme");

      if (themeSaved) {
        document.documentElement.dataset.theme = themeSaved;
      } else {
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)"
        ).matches;
        document.documentElement.dataset.theme = prefersDark ? "dark" : "light";
      }

      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", (event) => {
          if (!localStorage.getItem("theme")) {
            document.documentElement.dataset.theme = event.matches
              ? "dark"
              : "light";
          }
        });
    </script>
  </head>
  <body
    class="h-full overflow-x-hidden bg-default text-default text-base selection:bg-secondary selection:text-white"
  >
    <Header />
    <Splash />
    <div class="space-y-24 px-8 py-32">
    
        
      
      <div class="">
      <button id="firstButton" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> First Basic Component for Json stuff </div>
      <div class=" FirstComponent border-2 border-black">
          <FirstComp/>
      </div>


      <button id="secondButton" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Landing 1
      <div class=" secondComponent ">
      <Landing1 />
      </div>


      <br> <button id="thirdButton" class=" ml-5  border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Landing 2 
      <div class=" thirdComponent ">
      <Landing2 />
      </div>


      <br> <button id="fourthButton" class=" ml-5  border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Landing 3 
      <div class=" fourthComponent ">
      <Landing3 />
      </div>

      <br> <button id="fifthButton" class=" ml-5  border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Landing 4 
      <div class=" fifthComponent ">
      <Landing4 />
      </div>


      <br> <button id="sixthButton" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Landing 5
      <div class=" sixthComponent ">
        <Landing5 />
      </div>
      

      <br> <button id="landVue1Button" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Landing vue 1
      <div class="landVue1Component ">
        <LandingVue1 />
      </div>

  
      <br> <button id="seventhButton" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Simple Button 
      <div class=" seventhComponent ">
      <NewSimple />
      </div>
  
  
      <br> <button id="eightButton" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Content shi 
      <div class=" eightComponent ">
      <NEWcontent />
      </div>


      <br> <button id="nineButton" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Two buttons large text 
      <div class=" nineComponent ">
      <Intro />
      </div>
  
  
      <br> <button id="tenButton" class=" ml-5  border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Astro Themes Features 
      <div class=" tenComponent ">
      <New1 />
      </div>
  
  
      <br> <button id="elevenButton" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Features from Template
      <div class=" elevenComponent ">
      <Features />
      </div>
      
  
  
      <br> <button id="twelveButton" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Contact
      <div class=" twelveComponent ">
      <Showcase />
    </div>
      

    <br> <button id="thirteenButton" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Contact
      <div class=" thirteenComponent ">
      <New2 />
    </div>


    <br> <button id="fourteenButton" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Contact
      <div class=" fourteenComponent ">
      
    </div>


    <br> <button id="fifteenComponent" class=" ml-5 border border-black px-5 hover:bg-gray-200 "> HIDE/ SHOW </button> Contact
      <div class=" fifteenComponent ">
      
    </div>
    
    <Footer />
  </body>
</html>



<script>

// vue Lanidng pages


// Get the button and the element to toggle
const toggleButtonVue1 = document.getElementById('landVue1Button') as HTMLElement;
const firstComponentVue1 = document.querySelector('.landVue1Component') as HTMLElement;


// Define a function to handle the click event
function toggleComponentVue1() {
  if (firstComponentVue1?.style.display === 'none') {
    firstComponentVue1.style.display = 'block'; // Show the component
    toggleButtonVue1.style.backgroundColor = '';
  } else {
    firstComponentVue1.style.display = 'none'; // Hide the component
    toggleButtonVue1.style.backgroundColor = 'grey'; // button color change
  }
}


// Attach the click event to the button
toggleButtonVue1.addEventListener('click', toggleComponentVue1);

// Get the button and the element to toggle
const toggleButton = document.getElementById('firstButton') as HTMLElement;
const firstComponent = document.querySelector('.FirstComponent') as HTMLElement;


// Define a function to handle the click event
function toggleComponent() {
  if (firstComponent?.style.display === 'none') {
    firstComponent.style.display = 'block'; // Show the component
    toggleButton.style.backgroundColor = '';
  } else {
    firstComponent.style.display = 'none'; // Hide the component
    toggleButton.style.backgroundColor = 'grey'; // button color change
  }
}


// Attach the click event to the button
toggleButton.addEventListener('click', toggleComponent);




// SECOND BUTTON




const toggleButton2 = document.getElementById('secondButton') as HTMLElement;
const firstComponent2 = document.querySelector('.secondComponent') as HTMLElement;


// Define a function to handle the click event
function toggleComponent2() {
  if (firstComponent2?.style.display === 'none') {
    firstComponent2.style.display = 'block'; // Show the component
    toggleButton2.style.backgroundColor = '';
  } else {
    firstComponent2.style.display = 'none'; // Hide the component
    toggleButton2.style.backgroundColor = 'grey'; // Hide the component
  }
}


// Attach the click event to the button
toggleButton2.addEventListener('click', toggleComponent2);



// third BUTTON




const toggleButton3 = document.getElementById('thirdButton') as HTMLElement;
const firstComponent3 = document.querySelector('.thirdComponent') as HTMLElement;


// Define a function to handle the click event
function toggleComponent3() {
  if (firstComponent3?.style.display === 'none') {
    firstComponent3.style.display = 'block'; // Show the component
    toggleButton3.style.backgroundColor = '';
  } else {
    firstComponent3.style.display = 'none'; // Hide the component
    toggleButton3.style.backgroundColor = 'grey'; // Hide the component
  }
}


// Attach the click event to the button
toggleButton3.addEventListener('click', toggleComponent3);




// fourth BUTTON




const toggleButton4 = document.getElementById('fourthButton') as HTMLElement;
const firstComponent4 = document.querySelector('.fourthComponent') as HTMLElement;


// Define a function to handle the click event
function toggleComponent4() {
  if (firstComponent4?.style.display === 'none') {
    firstComponent4.style.display = 'block'; // Show the component
    toggleButton4.style.backgroundColor = '';
  } else {
    firstComponent4.style.display = 'none'; // Hide the component
    toggleButton4.style.backgroundColor = 'grey'; // Hide the component
  }
}


// Attach the click event to the button
toggleButton4.addEventListener('click', toggleComponent4);




// fifth BUTTON




const toggleButton5 = document.getElementById('fifthButton') as HTMLElement;
const firstComponent5 = document.querySelector('.fifthComponent') as HTMLElement;


// Define a function to handle the click event
function toggleComponent5() {
  if (firstComponent5?.style.display === 'none') {
    firstComponent5.style.display = 'block'; // Show the component
    toggleButton5.style.backgroundColor = '';
  } else {
    firstComponent5.style.display = 'none'; // Hide the component
    toggleButton5.style.backgroundColor = 'grey'; // Hide the component
  }
}


// Attach the click event to the button
toggleButton5.addEventListener('click', toggleComponent5);




// sixth BUTTON




const toggleButton6 = document.getElementById('sixthButton') as HTMLElement;
const firstComponent6 = document.querySelector('.sixthComponent') as HTMLElement;


// Define a function to handle the click event
function toggleComponent6() {
  if (firstComponent6?.style.display === 'none') {
    firstComponent6.style.display = 'block'; // Show the component
    toggleButton6.style.backgroundColor = '';
  } else {
    firstComponent6.style.display = 'none'; // Hide the component
    toggleButton6.style.backgroundColor = 'grey'; // Hide the component
  }
}


// Attach the click event to the button
toggleButton6.addEventListener('click', toggleComponent6);






// seventh BUTTON




const toggleButton7 = document.getElementById('seventhButton') as HTMLElement;
const firstComponent7 = document.querySelector('.seventhComponent') as HTMLElement;


// Define a function to handle the click event
function toggleComponent7() {
  if (firstComponent7?.style.display === 'none') {
    firstComponent7.style.display = 'block'; // Show the component
    toggleButton7.style.backgroundColor = '';
  } else {
    firstComponent7.style.display = 'none'; // Hide the component
    toggleButton7.style.backgroundColor = 'grey'; // Hide the component
  }
}


// Attach the click event to the button
toggleButton7.addEventListener('click', toggleComponent7);



// eight BUTTON




const toggleButton8 = document.getElementById('eightButton') as HTMLElement;
const firstComponent8 = document.querySelector('.eightComponent') as HTMLElement;


// Define a function to handle the click event
function toggleComponent8() {
  if (firstComponent8?.style.display === 'none') {
    firstComponent8.style.display = 'block'; // Show the component
    toggleButton8.style.backgroundColor = '';
  } else {
    firstComponent8.style.display = 'none'; // Hide the component
    toggleButton8.style.backgroundColor = 'grey'; // Hide the component
  }
}


// Attach the click event to the button
toggleButton8.addEventListener('click', toggleComponent8);



// nine BUTTON




const toggleButton9 = document.getElementById('nineButton') as HTMLElement;
const firstComponent9 = document.querySelector('.nineComponent') as HTMLElement;


// Define a function to handle the click event
function toggleComponent9() {
if (firstComponent9?.style.display === 'none') {
  firstComponent9.style.display = 'block'; // Show the component
  toggleButton9.style.backgroundColor = '';
} else {
  firstComponent9.style.display = 'none'; // Hide the component
  toggleButton9.style.backgroundColor = 'grey'; // Hide the component
}
}


// Attach the click event to the button
toggleButton9.addEventListener('click', toggleComponent9);





// ten BUTTON




const toggleButton10 = document.getElementById('tenButton') as HTMLElement;
const firstComponent10 = document.querySelector('.tenComponent') as HTMLElement;


// Define a function to handle the click event
function toggleComponent10() {
if (firstComponent10?.style.display === 'none') {
  firstComponent10.style.display = 'block'; // Show the component
  toggleButton10.style.backgroundColor = '';
} else {
  firstComponent10.style.display = 'none'; // Hide the component
  toggleButton10.style.backgroundColor = 'grey'; // Hide the component
}
}


// Attach the click event to the button
toggleButton10.addEventListener('click', toggleComponent10);


// ELEVEN BUTTON
const toggleButton11 = document.getElementById('elevenButton') as HTMLElement;
const firstComponent11 = document.querySelector('.elevenComponent') as HTMLElement;

// Define a function to handle the click event
function toggleComponent11() {
  if (firstComponent11?.style.display === 'none') {
    firstComponent11.style.display = 'block'; // Show the component
    toggleButton11.style.backgroundColor = '';
  } else {
    firstComponent11.style.display = 'none'; // Hide the component
    toggleButton11.style.backgroundColor = 'grey';
  }
}

// Attach the click event to the button
toggleButton11.addEventListener('click', toggleComponent11);

// TWELVE BUTTON
const toggleButton12 = document.getElementById('twelveButton') as HTMLElement;
const firstComponent12 = document.querySelector('.twelveComponent') as HTMLElement;

// Define a function to handle the click event
function toggleComponent12() {
  if (firstComponent12?.style.display === 'none') {
    firstComponent12.style.display = 'block'; // Show the component
    toggleButton12.style.backgroundColor = '';
  } else {
    firstComponent12.style.display = 'none'; // Hide the component
    toggleButton12.style.backgroundColor = 'grey';
  }
}

// Attach the click event to the button
toggleButton12.addEventListener('click', toggleComponent12);

// THIRTEEN BUTTON
const toggleButton13 = document.getElementById('thirteenButton') as HTMLElement;
const firstComponent13 = document.querySelector('.thirteenComponent') as HTMLElement;

// Define a function to handle the click event
function toggleComponent13() {
  if (firstComponent13?.style.display === 'none') {
    firstComponent13.style.display = 'block'; // Show the component
    toggleButton13.style.backgroundColor = '';
  } else {
    firstComponent13.style.display = 'none'; // Hide the component
    toggleButton13.style.backgroundColor = 'grey';
  }
}

// Attach the click event to the button
toggleButton13.addEventListener('click', toggleComponent13);

// FOURTEEN BUTTON
const toggleButton14 = document.getElementById('fourteenButton') as HTMLElement;
const firstComponent14 = document.querySelector('.fourteenComponent') as HTMLElement;

// Define a function to handle the click event
function toggleComponent14() {
  if (firstComponent14?.style.display === 'none') {
    firstComponent14.style.display = 'block'; // Show the component
    toggleButton14.style.backgroundColor = '';
  } else {
    firstComponent14.style.display = 'none'; // Hide the component
    toggleButton14.style.backgroundColor = 'grey';
  }
}

// Attach the click event to the button
toggleButton14.addEventListener('click', toggleComponent14);

// FIFTEEN BUTTON
const toggleButton15 = document.getElementById('fifteenButton') as HTMLElement;
const firstComponent15 = document.querySelector('.fifteenComponent') as HTMLElement;

// Define a function to handle the click event
function toggleComponent15() {
  if (firstComponent15?.style.display === 'none') {
    firstComponent15.style.display = 'block'; // Show the component
    toggleButton15.style.backgroundColor = '';
  } else {
    firstComponent15.style.display = 'none'; // Hide the component
    toggleButton15.style.backgroundColor = 'grey';
  }
}

// Attach the click event to the button
toggleButton15.addEventListener('click', toggleComponent15);
</script>


<style>

</style>