---
const { align = "center" } = Astro.props;
const { class: className } = Astro.props;
---
<div class:list={["max-w-screen-xl mx-auto px-5", className]}>
    
  
<div class:list={["mt-16", align === "center" && "text-center"]}>
    <h1 class="text-4xl lg:text-5xl font-bold lg:tracking-tight">
      <slot name="title">Contact</slot>
    </h1>
    <p class="text-lg mt-4 text-slate-600">
      <slot name="desc">Send us shit</slot>
    </p>
  </div>

<div class="grid md:grid-cols-2 gap-10 mx-auto max-w-4xl mt-16">
    <div>
      <h2 class="font-medium text-2xl text-gray-800">Contact form that works actually</h2>
      <p class="text-lg leading-relaxed text-slate-500 mt-3">
        Have something to say? We are here to help. Fill up the form or send
        email or call phone. Message send to mictom747@gmail.com
      </p>
      <div class="mt-5">
        <div class="flex items-center mt-2 space-x-2 text-gray-600">
          
          <span>1734 Sanfransico, CA 93063</span>
        </div><div class="flex items-center mt-2 space-x-2 text-gray-600">
<a
            href="mailto:cock@cock.com"
            >cock@cock.cock</a
          >
        </div><div class="flex items-center mt-2 space-x-2 text-gray-600">
          <a
            href="tel:+1 (987) 4587 899">+1 (987) 4587 899</a
          >
        </div>
      </div>
    </div>
    <div>


    <form
  action="https://api.web3forms.com/submit"
  method="POST"
  id="form"
  class="needs-validation"
  novalidate>
  <input type="hidden" name="access_key" value="46ea4dec-b9ff-45db-bcf2-92e11e31380b" />
  <!-- Create your free access key from https://web3forms.com/ -->
  <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
  <div class="mb-5">
    <input
      type="text"
      placeholder="Full Name"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
      name="name"
    />
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please provide your full name.
    </div>
  </div>
  <div class="mb-5">
    <label for="email_address" class="sr-only">Email Address</label><input
      id="email_address"
      type="email"
      placeholder="Email Address"
      name="email"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>
  <div class="mb-3">
    <textarea
      name="message"
      required
      placeholder="Your Message"
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none h-36 focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    ></textarea>
    <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
      Please enter your message.
    </div>
  </div>
  <button type="submit" class=" p-5 border rounded-md bg-black text-white hover:text-red-700">Send Message</button>
  <div id="result" class="mt-3 text-center"></div>
</form>
</div>
</div>
</div>



<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script is:inline>
  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    if (!form.checkValidity()) {
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }
    const formData = new FormData(form);
    const object = Object.fromEntries(formData);
    const json = JSON.stringify(object);

    result.innerHTML = "Sending...";

    fetch("https://api.web3forms.com/submit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: json,
    })
      .then(async (response) => {
        let json = await response.json();
        if (response.status == 200) {
          result.classList.add("text-green-500");
          result.innerHTML = json.message;
        } else {
          console.log(response);
          result.classList.add("text-red-500");
          result.innerHTML = json.message;
        }
      })
      .catch((error) => {
        console.log(error);
        result.innerHTML = "Something went wrong!";
      })
      .then(function () {
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => {
          result.style.display = "none";
        }, 5000);
      });
  });
</script>